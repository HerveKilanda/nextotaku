// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Manga {
  mangaId   Int      @id @default(autoincrement())
  titre       String   @db.VarChar(100)
  categorie   categorie @relation(fields: [categorieId], references: [categorieId], onDelete: Cascade)
  categorieId Int
  emprunts    Emprunt[]
  status    Status   @default(LIBRE)
  description String @db.Text()
  users      User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      Int
}

model categorie {
  categorieId Int    @id @default(autoincrement())
   nom         String @default("")
  mangas      Manga[]
}

model Emprunt {
  empruntsId Int    @id @default(autoincrement())
  manga      Manga  @relation(fields: [mangaId], references: [mangaId], onDelete: Cascade)
  mangaId    Int
  user       User   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId     Int
   dateDebut  DateTime @default(now())
  dateFin    DateTime 
  
}

model User {
  userId   Int    @id @default(autoincrement())
  username String @db.VarChar(100)
  email    String  @unique @db.VarChar(100)
  password String @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  emprunts Emprunt[] 
  mangas   Manga[]
  role    Role  @default(USER)
}

enum Role {
  ADMIN
  USER
}
enum Status {
  LIBRE
  EMPRUNTE
}


